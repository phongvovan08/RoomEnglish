name: Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '20.x'
  AZURE_WEBAPP_NAME: 'your-app-name'  # Replace with your Azure Web App name

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    # Checkout code
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # Setup .NET
    - name: Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    # Setup Node.js
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: src/Web/ClientApp/package-lock.json
    
    # Build Frontend
    - name: Install frontend dependencies
      working-directory: src/Web/ClientApp
      run: npm ci
    
    - name: Build frontend
      working-directory: src/Web/ClientApp
      run: npm run build
    
    # Build Backend
    - name: Restore backend dependencies
      run: dotnet restore src/src.sln
    
    - name: Build backend
      run: dotnet build src/src.sln --configuration Release --no-restore
    
    - name: Publish backend
      run: dotnet publish src/Web/Web.csproj --configuration Release --output ./publish --no-build
    
    # Copy frontend build to wwwroot
    - name: Copy frontend to wwwroot
      run: |
        rm -rf ./publish/wwwroot/*
        cp -r src/Web/ClientApp/dist/* ./publish/wwwroot/
    
    # Deploy to Azure
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./publish
    
    # Health check
    - name: Health Check
      run: |
        sleep 30
        curl -f https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health || exit 1
